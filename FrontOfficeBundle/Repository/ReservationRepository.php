<?php

namespace FrontOfficeBundle\Repository;

/**
 * ReservationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReservationRepository extends \Doctrine\ORM\EntityRepository
{
	public function getReservationsUnProcessed()
	{
		$query=$this->getEntityManager()->createQuery('
			SELECT r 
			FROM FrontOfficeBundle:Reservation r 			
			WHERE r.archived =false
			AND r.state = 0');

		return $query->getResult();
	}

	public function getReservationsUnProcessedUnLimited()
	{
		$query=$this->getEntityManager()->createQuery('
			SELECT r 
			FROM FrontOfficeBundle:Reservation r 			
			WHERE r.archived =false');

		return $query->getResult();
	}

	public function countReservationsUnProcessed()
	{
		$query=$this->getEntityManager()->createQuery('
			SELECT COUNT(r.id) 
			FROM FrontOfficeBundle:Reservation r 
			WHERE r.state = 0
			AND r.archived =false');

		return $query->getSingleScalarResult();
	}

	public function countReservationsProcessed()
	{
		$query=$this->getEntityManager()->createQuery('
			SELECT COUNT(r.id) 
			FROM FrontOfficeBundle:Reservation r 
			WHERE r.state = 1
			AND r.archived =false'); 			

		return $query->getSingleScalarResult();
	}

	public function countReservationsSold()
	{
		$query=$this->getEntityManager()->createQuery('
			SELECT COUNT(r.id) 
			FROM FrontOfficeBundle:Reservation r 
			WHERE r.state = 2'); 			

		return $query->getSingleScalarResult();
	}

	public function getReservationsSold()
	{
		$query=$this->getEntityManager()->createQuery('
			SELECT r 
			FROM FrontOfficeBundle:Reservation r 
			WHERE r.state = 2
			ORDER BY r.dateCreated'); 			

		return $query->getResult();
	}

	public function getReservationsByUser($id)
	{
		$query=$this->getEntityManager()->createQuery('
			SELECT r 
			FROM FrontOfficeBundle:Reservation r 
			WHERE r.user = :id')
		->setParameter('id', $id);

		return $query->getResult();
	}
}
