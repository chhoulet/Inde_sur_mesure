<?php

namespace FrontOfficeBundle\Repository;

/**
 * TripRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TripRepository extends \Doctrine\ORM\EntityRepository
{	
	public function getTripCreated()
	{
		$query=$this->getEntityManager()->createQuery('
			SELECT t 
			FROM FrontOfficeBundle:Trip t
			WHERE t.active = 1
			AND t.public = true
			ORDER BY t.dateBegining DESC');

		return $query->getResult();
	}

	public function selectCountTripPublicSold()
	{
		$query=$this->getEntityManager()->createQuery('
			SELECT COUNT(t.id) 
			FROM FrontOfficeBundle:Trip t			
			WHERE t.public = true');

		return $query->getSingleScalarResult();
	}

	public function selectCountTripPrivateSold()
	{
		$query=$this->getEntityManager()->createQuery('
			SELECT COUNT(t.id) 
			FROM FrontOfficeBundle:Trip t			
			WHERE t.public = false
			AND t.sold = true');

		return $query->getSingleScalarResult();
	}

	public function getPrivateTrips()
	{
		$query=$this->getEntityManager()->createQuery('
			SELECT t 
			FROM FrontOfficeBundle:Trip t 
			WHERE t.public = false 
			AND t.sold = true
			ORDER BY t.dateCreated DESC');

		return $query->getResult();
	}

	public function getTripsPublicCreated()
	{
		$query=$this->getEntityManager()->createQuery('
			SELECT t 
			FROM FrontOfficeBundle:Trip t
			WHERE t.public = true			
			ORDER BY t.dateCreated DESC');

		return $query->getResult();
	}

	public function getTripsByEstimate($id)
	{
		$query=$this->getEntityManager()->createQuery('
			SELECT t 
			FROM FrontOfficeBundle:Trip t
			JOIN t.estimate e 
			WHERE e.id = :idEstimate')
		->setParameter('idEstimate', $id);

		return $query->getResult();
	}

	public function getTripsPrivate()
	{
		$qb=$this->createQueryBuilder('q')
			     ->where('q.public = false')
			     ->andWhere('q.bobleTrip = 1')
			     ->orderBy('q.title','ASC');

		return $qb;
	}
}
